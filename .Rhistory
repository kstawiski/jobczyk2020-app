setwd("C:/Users/konra/OneDrive/Projekty/2018_Jobczyk_Pecherz/Papier2/v12-2020/app/jobczyk2020-app")
setwd("C:/Users/konra/OneDrive/Projekty/2018_Jobczyk_Pecherz/Papier2/v12-2020/app/jobczyk2020-app")
library(tableone)
training_pfs = data.table::fread("Data/training_pfs_old.csv")
CreateTableOne(training_pfs)
CreateTableOne(data = training_pfs)
?CreateTableOne(data = training_pfs)
CreateTableOne(data = training_pfs, factorVars = c("Gender", "Age", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event"))
CreateTableOne(data = training_pfs, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event"))
training_pfs = data.table::fread("Data/training_pfs_old.csv")
training_rfs = data.table::fread("Data/training_rfs_old.csv")
validation_pfs = data.table::fread("Data/validation_pfs_old.csv")
validation_rfs = data.table::fread("Data/validation_rfs_old.csv")
training_pfs$Set = "Discovery"
validation_pfs$Set = "Validation"
training_pfs = data.table::fread("Data/training_pfs_old.csv")
training_pfs$Set = "Discovery"
training_rfs = data.table::fread("Data/training_rfs_old.csv")
validation_pfs = data.table::fread("Data/validation_pfs_old.csv")
validation_pfs$Set = "Validation"
validation_rfs = data.table::fread("Data/validation_rfs_old.csv")
dane = rbind(training_pfs, validation_pfs)
dane$EventR = c(training_rfs$Event, validation_rfs$Event)
library(tableone)
training_pfs = data.table::fread("Data/training_pfs_old.csv")
training_pfs$Set = "Discovery"
training_rfs = data.table::fread("Data/training_rfs_old.csv")
validation_pfs = data.table::fread("Data/validation_pfs_old.csv")
validation_pfs$Set = "Validation"
validation_rfs = data.table::fread("Data/validation_rfs_old.csv")
dane = rbind(training_pfs, validation_pfs)
dane$EventR = c(training_rfs$Event, validation_rfs$Event)
tab1 = CreateTableOne(data = dane, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"))
tab1
tab1 = CreateTableOne(data = dane, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set")
tab1
View(tab1)
tab1 = CreateTableOne(data = dane, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T)
tab1
tab1 = CreateTableOne(data = dane, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), exact = "stage", strata = "Set", smd = T)
tab1 = CreateTableOne(data = dane, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T)
tab1
data.table::fwrite(tab1, "valResults/Table1.csv")
(ReporteRs)
library(magrittr)
install.packages("ReporteRs")
install.packages("officer")
# Load the packages
library(officer)
# Load the packages
library(officer)
library(magrittr)
# The script
docx( ) %>%
addFlexTable(tab1 %>%
FlexTable(header.cell.props = cellProperties( background.color = "#003366"),
header.text.props = textBold( color = "white" ),
add.rownames = TRUE ) %>%
setZebraStyle( odd = "#DDDDDD", even = "#FFFFFF" ) ) %>%
writeDoc(file = "valResults/table1.docx")
library(flextable)
install.packages("flextable")
library(flextable)
# Load the packages
library(officer)
library(flextable)
??writeDoc
#
devtools::install_github('davidgohel/ReporteRsjars')
install.packages("rJava")
library(rJava)
rJava::new()
#
devtools::install_github('davidgohel/ReporteRsjars')
devtools::install_github('davidgohel/ReporteRs')
tableone2flextable <- function(tableone){
rows <- nrow(tableone)
cols <- ncol(tableone)
rowsXcols <- rows*cols
colnames <- colnames(tableone)
listoflists <- list()
for (i in 1:cols){
start <- (i*rows+1)-rows
end <- i*rows
listoflists[[i]] <- tableone[start:end]
}
dataframe <- as.data.frame(listoflists, col.names = colnames)
flex <- flextable::flextable(dataframe)
return(flex)
}
tableone2flextable(tab1)
print(tab1)
t = print(tab1)
data.table::fwrite(t, "valResults/Table1.csv")
data.table::fwrite(t, "valResults/Table1.csv", row.names = T)
tabl1
tab1$CatTable
tab1
tab1 = CreateTableOne(data = dane, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T,export.word = TRUE)
tab1mat <- print(tab1)
View(tab1mat)
write.csv(t, "valResults/Table1.csv")
mmc = data.table::fread("Data/mmc.csv")
mmc = data.table::fread("Data/shariatMMC.csv")
View(mmc)
rbind(dane, mmc)
dane2 = plyr::rbind.fill(dane, mmc)
View(dane2)
dane2$Set[is.na(dane2$Set)] = "MMC-treated"
dane2$Event[is.na(dane2$Event)] = mmc$`PFS_event [0 - censored, 1 - P]`
dane2$EventR[is.na(dane2$Event)] = mmc$`RFS_event [0 - censored, 1 - R]`
View(dane2)
tab2 = CreateTableOne(data = dane2, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T,export.word = TRUE)
tab2 = CreateTableOne(data = dane2, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T)
tab2
tab2mat <- print(tab2)
?CreateTableOne
tab2 = CreateTableOne(data = dane2, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T)
tab2
tab2mat <- print(tab2)
write.csv(tab2mat, "valResults/SupplTab4.csv")
mmc$`RFS_event [0 - censored, 1 - R]`
dane2$EventR[is.na(dane2$EventR)] = mmc$`RFS_event [0 - censored, 1 - R]`
tab2 = CreateTableOne(data = dane2, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T)
tab2
tab2mat <- print(tab2)
write.csv(tab2mat, "valResults/SupplTab4.csv")
