# The script
docx( ) %>%
addFlexTable(tab1 %>%
FlexTable(header.cell.props = cellProperties( background.color = "#003366"),
header.text.props = textBold( color = "white" ),
add.rownames = TRUE ) %>%
setZebraStyle( odd = "#DDDDDD", even = "#FFFFFF" ) ) %>%
writeDoc(file = "valResults/table1.docx")
library(flextable)
install.packages("flextable")
library(flextable)
# Load the packages
library(officer)
library(flextable)
??writeDoc
#
devtools::install_github('davidgohel/ReporteRsjars')
install.packages("rJava")
library(rJava)
rJava::new()
#
devtools::install_github('davidgohel/ReporteRsjars')
devtools::install_github('davidgohel/ReporteRs')
tableone2flextable <- function(tableone){
rows <- nrow(tableone)
cols <- ncol(tableone)
rowsXcols <- rows*cols
colnames <- colnames(tableone)
listoflists <- list()
for (i in 1:cols){
start <- (i*rows+1)-rows
end <- i*rows
listoflists[[i]] <- tableone[start:end]
}
dataframe <- as.data.frame(listoflists, col.names = colnames)
flex <- flextable::flextable(dataframe)
return(flex)
}
tableone2flextable(tab1)
print(tab1)
t = print(tab1)
data.table::fwrite(t, "valResults/Table1.csv")
data.table::fwrite(t, "valResults/Table1.csv", row.names = T)
tabl1
tab1$CatTable
tab1
tab1 = CreateTableOne(data = dane, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T,export.word = TRUE)
tab1mat <- print(tab1)
View(tab1mat)
write.csv(t, "valResults/Table1.csv")
mmc = data.table::fread("Data/mmc.csv")
mmc = data.table::fread("Data/shariatMMC.csv")
View(mmc)
rbind(dane, mmc)
dane2 = plyr::rbind.fill(dane, mmc)
View(dane2)
dane2$Set[is.na(dane2$Set)] = "MMC-treated"
dane2$Event[is.na(dane2$Event)] = mmc$`PFS_event [0 - censored, 1 - P]`
dane2$EventR[is.na(dane2$Event)] = mmc$`RFS_event [0 - censored, 1 - R]`
View(dane2)
tab2 = CreateTableOne(data = dane2, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T,export.word = TRUE)
tab2 = CreateTableOne(data = dane2, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T)
tab2
tab2mat <- print(tab2)
?CreateTableOne
tab2 = CreateTableOne(data = dane2, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T)
tab2
tab2mat <- print(tab2)
write.csv(tab2mat, "valResults/SupplTab4.csv")
mmc$`RFS_event [0 - censored, 1 - R]`
dane2$EventR[is.na(dane2$EventR)] = mmc$`RFS_event [0 - censored, 1 - R]`
tab2 = CreateTableOne(data = dane2, factorVars = c("Gender", "T", "CIS", "Grading", "No_tumors", "Diameter", "BCG", "Event", "EventR"), strata = "Set", smd = T)
tab2
tab2mat <- print(tab2)
write.csv(tab2mat, "valResults/SupplTab4.csv")
setwd("C:/Users/konra/OneDrive/Projekty/2020_Jobczyk_DeepSurv/jobczyk2020-app")
library(readr)
training_rfs <- read_csv("Data/training_rfs.csv")
View(training_rfs)
setwd("C:/Users/konra/OneDrive/Projekty/2020_Jobczyk_DeepSurv/jobczyk2020-app")
training_pfs = data.table::fread("Data/training_pfs_old.csv")
training_pfs$Set = "Discovery"
training_rfs = data.table::fread("Data/training_rfs_old.csv")
validation_pfs = data.table::fread("Data/validation_pfs_old.csv")
validation_pfs$Set = "Validation"
validation_rfs = data.table::fread("Data/validation_rfs_old.csv")
dane = rbind(training_pfs, validation_pfs)
dane$EventR = c(training_rfs$Event, validation_rfs$Event)
mmc = data.table::fread("Data/shariatMMC.csv")
dane2 = plyr::rbind.fill(dane, mmc)
dane2$Set[is.na(dane2$Set)] = "MMC-treated"
dane2$Event[is.na(dane2$Event)] = mmc$`PFS_event [0 - censored, 1 - P]`
dane2$EventR[is.na(dane2$EventR)] = mmc$`RFS_event [0 - censored, 1 - R]`
dane$Set
dane2$BCG
table(dane2$BCG)
dane2$Set
table(dane2$Set)
dane2$`PFS_time [years]`
View(dane2)
dane = rbind(training_pfs, validation_pfs)
dane$EventR = c(training_rfs$Event, validation_rfs$Event)
dane$TimeR = c(training_rfs$Time, validation_rfs$Time)
mmc = data.table::fread("Data/shariatMMC.csv")
mmc$PFS_time
training_rfs$Time
mmc$`PFS_time [years]`
mmc$Time = mmc$`PFS_time [years]`
mmc$Event = mmc$`PFS`
mmc$TimeR = mmc$`RFS_time [years]`
mmc$EventR = mmc$`RFS`
dane2 = plyr::rbind.fill(dane, mmc)
dane2$Set[is.na(dane2$Set)] = "MMC-treated"
dane2$`PFS_time [years]`
dane2$Time
View(dane2)
fit = survfit(Surv(Time, Event) ~ Set, data = dane2)
library(survminer)
fit = survfit(Surv(Time, Event) ~ Set, data = dane2)
library(survival)
fit = survfit(Surv(Time, Event) ~ Set, data = dane2)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
ggtheme = theme_bw())
?ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
ggtheme = theme_bw())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv", color = "black",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
ggtheme = theme_bw())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv", color = c("black","grey","black"),
risk.table = TRUE, # Add risk table
test.for.trend = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
ggtheme = theme_bw())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv", color = c(1,1,1),
risk.table = TRUE, # Add risk table
test.for.trend = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = "strata", # Change line type by groups
ggtheme = theme_bw())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
ggtheme = theme_bw())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
p = ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
p = ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
p = ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
p = ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
fit = survfit(Surv(Time, Event) ~ Set + BCG, data = dane2)
p = ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
p + scale_linetype_discrete(name = "Pop Data", labels = c("A", "B"))
p
p = ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme(), break.x.by = 1)
p
p = ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme(), break.x.by = 1:10)
p
p = ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme(), break.x.by = 2)
p
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme(), break.time.by = 2)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, surv.median.line = "hv",
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme(), break.time.by = 0.1)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 1,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme(), break.time.by = 0.1)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 1,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
fit = survfit(Surv(Time, Event) ~ Set, data = dane2)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 1,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), # Change line type by groups
, tables.theme = clean_theme())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), color = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme())
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.5)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.01)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.1)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 2,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15, break.time.by = 1)
ggsurvplot(fit,
pval = TRUE, conf.int = TRUE, censor.size = 0,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15, break.time.by = 1)
ggsurvplot(fit,
pval = TRUE, conf.int = F, censor.size = 0,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15, break.time.by = 1)
ggsurvplot(fit,
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15, break.time.by = 1)
ggsurvplot(fit, xlab = "Time [years]", y = "Progression-free survival"
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15, break.time.by = 1)
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15, break.time.by = 1)
dane2$BCG
table(dane2$BCG, dane2$Set
)
dane2$meta = paste0(dane2$Set, dane2$BCG)
table(dane2$meta)
dane2$meta[dane2$meta == "Discovery0"] = "Discovery group (surgery only)"
dane2$meta = paste0(dane2$Set, dane2$BCG)
table(dane2$meta)
dane2$meta[dane2$meta == "Discovery0"] = "Discovery group (surgery only)"
dane2$meta[dane2$meta == "Discovery1"] = "Discovery group (BCG-treated)"
dane2$meta[dane2$meta == "Validation0"] = "Validation group (surgery only)"
dane2$meta[dane2$meta == "Validation1"] = "Validation group (BCG-treated)"
dane2$meta[dane2$meta == "MMC-treated0"] = "Additional MMC-treated group"
fit = survfit(Surv(Time, Event) ~ meta, data = dane2)
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3), palette = c("black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15, break.time.by = 1)
fit = survfit(Surv(Time, Event) ~ meta, data = dane2)
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3,4,5), palette = c("black","black","black","black","black") # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.15, break.time.by = 1)
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3,4,5), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "")
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(1,2,3,4,5), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left")
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(2,1,1,3,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left")
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left")
fit = survfit(Surv(Time, Event) ~ Set, data = dane2)
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left")
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
risk.table.col = "strata", # Change risk table color by groups
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left", legend.labs = c("Discovery group", "Additional MMC-treated group", "Validation group"))
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left", legend.labs = c("Discovery group", "Additional MMC-treated group", "Validation group"))
library(Cairo)
Cairo::Cairo(
30, #length
30, #width
file = paste("nameofplot", ".png", sep = ""),
type = "png", #tiff
bg = "transparent", #white or transparent depending on your requirement
dpi = 600,
units = "cm" #you can change to pixels etc
)
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F,
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left", legend.labs = c("Discovery group", "Additional MMC-treated group", "Validation group"))
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F, xlim=c(0,8),
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left", legend.labs = c("Discovery group", "Additional MMC-treated group", "Validation group"))
dev.off()
dev.off()
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F, xlim=c(0,8),
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "left", legend.labs = c("Discovery group", "Additional MMC-treated group", "Validation group"))
fit = survfit(Surv(Time, Event) ~ Set, data = dane2)
ggsurvplot(fit, xlab = "Time [years]", ylab = "Progression-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F, xlim=c(0,10),
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "right", legend.labs = c("Discovery group", "Additional MMC-treated group", "Validation group"))
fit = survfit(Surv(TimeR, EventR) ~ Set, data = dane2)
ggsurvplot(fit, xlab = "Time [years]", ylab = "Recurrence-free survival",
pval = TRUE, conf.int = F, censor.size = 0, censor = F, xlim=c(0,10),
risk.table = TRUE, # Add risk table
test.for.trend = TRUE, cumevents = T, cumcensor = F,
linetype = c(2,1,3), # Change line type by groups
, tables.theme = clean_theme(), tables.height = 0.2, break.time.by = 1, legend.title = "", legend = "right", legend.labs = c("Discovery group", "Additional MMC-treated group", "Validation group"))
# Kappa
library("vcd")
# Compute kapa
res.k <- Kappa(table(dane2$T, dane2$Grading))
?Kappa
# Compute kapa
res.k <- Kappa(as.matrix(table(dane2$T, dane2$Grading)))
table(dane2$T, dane2$Grading)
# Kappa
library(irr)
install.packages("irr")
# Kappa
library(irr)
kappam.light(as.matrix(table(dane2$T, dane2$Grading)))
table(dane2$T, dane2$Grading)
# Tau
library(VCAM)
install.packages("VCAM")
install.packages("VGAM")
# Tau
library(VGAM)
kendall.tau(dane2$T, dane2$Grading)
?kendall.tau(dane2$T, dane2$Grading)
kendall.tau(dane2$T, dane2$Grading, exact = T)
